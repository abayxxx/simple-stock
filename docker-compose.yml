version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    image: myapp-php:latest
    env_file:
      - .env.docker
    depends_on:
      - db
      - redis
    volumes:
      - ./:/var/www/html                 # <— share the whole app
      - storage:/var/www/html/storage
      - logs:/var/www/html/storage/logs
    networks: [appnet]

  nginx:
    image: nginx:1.27-alpine
    depends_on: [app]
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/var/www/html:ro             # <— same files as the app container
      - storage:/var/www/html/storage
      - logs:/var/www/html/storage/logs
    networks: [appnet]

  db:
    image: mariadb:10.11
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass}
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci"]
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"   # expose only if you need external access
    networks: [appnet]

  redis:
    image: redis:7-alpine
    command: ["redis-server","--appendonly","yes"]
    volumes:
      - redisdata:/data
    networks: [appnet]

  queue:
    image: myapp-php:latest
    env_file: [.env.docker]
    depends_on: [app, db]
    command: ["sh","-lc","php artisan queue:work --sleep=1 --tries=3 --timeout=90"]
    volumes:
      - storage:/var/www/html/storage
      - logs:/var/www/html/storage/logs
    restart: always
    networks: [appnet]

  scheduler:
    image: myapp-php:latest
    env_file: [.env.docker]
    depends_on: [app]
    command: ["sh","-lc","php artisan schedule:work"]
    volumes:
      - storage:/var/www/html/storage
      - logs:/var/www/html/storage/logs
    restart: always
    networks: [appnet]

volumes:
  appcode:   # <— new
  storage:
  logs:
  dbdata:
  redisdata:

networks:
  appnet:
